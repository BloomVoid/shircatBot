from aiogram import types
import inline_menu.back_menu
import lib.bucket

async def handler_reports(dp):
    @dp.callback_query_handler(text_startswith='report')
    async def search(call: types.CallbackQuery):
        await call.answer()
        text = f'''
@{call.message.chat.first_name} üßø –≤—ã –≤—ã–±–∏–≤–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ [üòà –†–µ–ø–æ—Ä—Ç ]
–ü—Ä–∞–≤–∏–ª–∞ –∑–∞—è–≤–∫–∏ üìù
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ 
‚Ä¢ –°—Å—ã–ª–∫–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ ( —Ç–µ–ª–µ–≥—Ä–∞–º–º —á–∞—Ç - –∫–∞–Ω–∞–ª üìÉ –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –ª–∏–±–æ –∂–µ –¥—Ä—É–≥–æ–µ –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ ü§π‚Äç‚ôÄÔ∏è )
–ï—Å–ª–∏ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ üìù
–¢–æ–≥–¥–∞ –º—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É –Ω–∞–ø–∏—Å–∞–≤ –µ–µ –±–æ—Ç—É –∏ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—à–ª–µ—Ç –µ–µ –∫ –Ω–∞–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö üéÉ
'''
        await call.message.edit_text(text,reply_markup=inline_menu.back_menu.back_menus)


    @dp.message_handler()
    async def handle_message(message: types.Message, state: lib.bucket.FSMContext):
        data = await state.get_data()
        if "token" in data:
            token = data["token"]
            forwarded_message = f'''
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.chat.username}
–ê–π–¥–∏: {message.chat.id} 
–ò–º—è: {message.chat.first_name} 
–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {token}
–æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É:\n\n{message.text}            
            
            
            '''
            await dp.bot.send_message(chat_id=-1001609160351, text=forwarded_message)
        else:
            chat = message.chat.id
            await dp.bot.send_message(chat,text='üòà –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç–∞ —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–∫–µ–Ω üòà')

    

        handler_reports(dp)