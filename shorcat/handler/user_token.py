import lib.bucket
from aiogram import types
 

async def token_message(dp):
    @dp.message_handler(commands=("token"))
    async def generate_token(message: types.Message, state: lib.bucket.FSMContext):
        data = await state.get_data()
        if "token" in data:
            token = data["token"]
            await message.answer(f"@{message.chat.first_name} üßø –≤–∞—à —Ç–æ–∫–µ–Ω —É–∂–µ –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤—ã–¥–∞–Ω –≤–∞–º ü§µ–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–± –µ–≥–æ —É–≤–∏–¥–µ—Ç—å –≤–∞–º –Ω—É–∂–Ω–æ  –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ üîú [ü§µ –ü—Ä–æ—Ñ–∏–ª—å ]")
        else:
            token = ''.join(lib.bucket.random.choices(lib.bucket.string.ascii_uppercase + lib.bucket.string.digits, k=10))
            await state.update_data(token=token)
            await message.answer(text= f"@{message.chat.first_name} üßø –≤–∞—à —Ç–æ–∫–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω üîú {token}")
    token_message(dp) 
        